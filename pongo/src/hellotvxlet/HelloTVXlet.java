package hellotvxlet;

import java.awt.Color;
import java.awt.Graphics;
import java.util.Timer;
import javax.tv.xlet.*;
import org.bluray.ui.event.HRcEvent;
import org.dvb.event.EventManager;
import org.dvb.event.UserEvent;
import org.dvb.event.UserEventListener;
import org.dvb.event.UserEventRepository;
import org.dvb.ui.DVBColor;
import org.havi.ui.HScene;
import org.havi.ui.HSceneFactory;
import org.havi.ui.HStaticText;
import org.havi.ui.HVisible;


public class HelloTVXlet implements Xlet, UserEventListener {

  HScene scene;
  
  boolean isRunning = true;
  boolean isWinner = false;
  
  int time=0;
  int paddle_height = 100;
  int field_height  = 576;
  int field_width   = 720;
  int idx_cp=0;
  int [][] computerplayer={{5,200},{10,200},{15,200},{20,200},{25,200},{30,200},{35,200},{40,200},{45,200},{50,200},{55,200},{60,200},{65,200},{70,200},{75,200},{80,200},{85,200},{90,200},{95,200},{100,200},
{105,200},{110,200},{115,200},{120,230},{125,230},{130,230},{135,260},{140,260},{145,260},{150,230},{155,230},{160,200},{165,200},{170,200},{175,230},{180,230},{185,260},{190,260},{195,290},{200,290},
{205,320},{210,350},{215,380},{220,380},{225,410},{230,440},{235,440},{240,440},{245,440},{250,440},{255,440},{260,470},{265,500},{270,500},{275,500},{280,500},{285,470},{290,440},{295,440},{300,440},
{305,440},{310,440},{315,440},{320,440},{325,440},{330,440},{335,440},{340,440},{345,440},{350,440},{355,440},{360,440},{365,440},{370,440},{375,440},{380,440},{385,440},{390,440},{395,440},{400,440},
{405,440},{410,440},{415,440},{420,440},{425,440},{430,440},{435,440},{440,440},{445,440},{450,440},{455,440},{460,440},{465,410},{470,380},{475,380},{480,350},{485,350},{490,320},{495,320},{500,290},
{505,260},{510,260},{515,260},{520,230},{525,230},{530,200},{535,200},{540,200},{545,200},{550,200},{555,200},{560,200},{565,200},{570,200},{575,200},{580,200},{585,200},{590,200},{595,230},{600,230},
{605,260},{610,260},{615,290},{620,320},{625,320},{630,320},{635,320},{640,320},{645,320},{650,320},{655,320},{660,290},{665,290},{670,260},{675,260},{680,260},{685,260},{690,260},{695,290},{700,320},
{705,320},{710,350},{715,380},{720,380},{725,380},{730,380},{735,380},{740,410},{745,410},{750,440},{755,440},{760,440},{765,440},{770,440},{775,440},{780,440},{785,440},{790,440},{795,440},{800,440},
{805,440},{810,440},{815,440},{820,440},{825,440},{830,440},{835,440},{840,440},{845,440},{850,440},{855,440},{860,440},{865,440},{870,440},{875,440},{880,440},{885,440},{890,410},{895,410},{900,380},
{905,380},{910,350},{915,350},{920,320},{925,320},{930,320},{935,320},{940,320},{945,320},{950,320},{955,320},{960,320},{965,320},{970,320},{975,320},{980,320},{985,320},{990,320},{995,320},{1000,320},
{1005,320},{1010,320},{1015,320},{1020,320},{1025,320},{1030,320},{1035,320},{1040,320},{1045,320},{1050,320},{1055,320},{1060,320},{1065,320},{1070,320},{1075,320},{1080,320},{1085,320},{1090,320},{1095,320},{1100,320},
{1105,320},{1110,320},{1115,320},{1120,320},{1125,320},{1130,320},{1135,320},{1140,320},{1145,320},{1150,320},{1155,320},{1160,320},{1165,320},{1170,320},{1175,320},{1180,320},{1185,320},{1190,320},{1195,320},{1200,320},
{1205,320},{1210,320},{1215,320},{1220,320},{1225,320},{1230,320},{1235,320},{1240,320},{1245,320},{1250,320},{1255,320},{1260,320},{1265,320},{1270,320},{1275,320},{1280,320},{1285,320},{1290,320},{1295,320},{1300,320},
{1305,320},{1310,290},{1315,260},{1320,260},{1325,260},{1330,260},{1335,260},{1340,260},{1345,290},{1350,290},{1355,320},{1360,320},{1365,320},{1370,320},{1375,320},{1380,320},{1385,320},{1390,320},{1395,320},{1400,320},
{1405,320},{1410,320},{1415,320},{1420,320},{1425,320},{1430,320},{1435,320},{1440,320},{1445,320},{1450,320},{1455,320},{1460,320},{1465,320},{1470,320},{1475,290},{1480,260},{1485,260},{1490,260},{1495,260},{1500,260},
{1505,260},{1510,260},{1515,260},{1520,260},{1525,260},{1530,260},{1535,260},{1540,230},{1545,230},{1550,200},{1555,200},{1560,200},{1565,200},{1570,200},{1575,200},{1580,200},{1585,200},{1590,200},{1595,200},{1600,200},
{1605,200},{1610,200},{1615,200},{1620,200},{1625,200},{1630,200},{1635,200},{1640,200},{1645,200},{1650,200},{1655,200},{1660,200},{1665,200},{1670,200},{1675,200},{1680,200},{1685,200},{1690,200},{1695,200},{1700,200},
{1705,200},{1710,200},{1715,200},{1720,200},{1725,200},{1730,200},{1735,200},{1740,200},{1745,200},{1750,200},{1755,200},{1760,200},{1765,200},{1770,200},{1775,200},{1780,200},{1785,200},{1790,200},{1795,200},{1800,200},
{1805,200},{1810,200},{1815,200},{1820,200},{1825,200},{1830,200},{1835,200},{1840,200},{1845,200},{1850,200},{1855,200},{1860,200},{1865,200},{1870,200},{1875,200},{1880,200},{1885,200},{1890,200},{1895,200},{1900,200},
{1905,200},{1910,200},{1915,200},{1920,200},{1925,200},{1930,200},{1935,200},{1940,200},{1945,200},{1950,200},{1955,200},{1960,200},{1965,200},{1970,200},{1975,200},{1980,200},{1985,200},{1990,200},{1995,200},{2000,200},
{2005,200},{2010,200},{2015,200},{2020,200},{2025,200},{2030,200},{2035,200},{2040,200},{2045,200},{2050,170},{2055,140},{2060,140},{2065,140},{2070,140},{2075,140},{2080,140},{2085,140},{2090,140},{2095,140},{2100,140},
{2105,140},{2110,140},{2115,140},{2120,140},{2125,140},{2130,140},{2135,140},{2140,140},{2145,140},{2150,140},{2155,140},{2160,140},{2165,140},{2170,140},{2175,140},{2180,140},{2185,140},{2190,170},{2195,200},{2200,200},
{2205,230},{2210,260},{2215,260},{2220,260},{2225,260},{2230,260},{2235,230},{2240,200},{2245,200},{2250,200},{2255,200},{2260,200},{2265,230},{2270,230},{2275,260},{2280,260},{2285,260},{2290,260},{2295,260},{2300,260},
{2305,290},{2310,290},{2315,320},{2320,320},{2325,320},{2330,320},{2335,320},{2340,290},{2345,290},{2350,260},{2355,260},{2360,260},{2365,230},{2370,230},{2375,200},{2380,200},{2385,200},{2390,200},{2395,200},{2400,230},
{2405,230},{2410,260},{2415,260},{2420,260},{2425,260},{2430,260},{2435,260},{2440,260},{2445,260},{2450,260},{2455,260},{2460,260},{2465,260},{2470,260},{2475,260},{2480,260},{2485,260},{2490,260},{2495,260},{2500,260},
{2505,260},{2510,260},{2515,260},{2520,260},{2525,260},{2530,260},{2535,290},{2540,290},{2545,320},{2550,320},{2555,320},{2560,320},{2565,320},{2570,290},{2575,290},{2580,260},{2585,260},{2590,230},{2595,230},{2600,200},
{2605,200},{2610,200},{2615,200},{2620,200},{2625,200},{2630,200},{2635,200},{2640,230},{2645,230},{2650,260},{2655,260},{2660,260},{2665,260},{2670,260},{2675,230},{2680,200},{2685,200},{2690,170},{2695,140},{2700,140},
{2705,110},{2710,110},{2715,80},{2720,50},{2725,50},{2730,20},{2735,20},{2740,20},{2745,-10},{2750,-10},{2755,-10},{2760,-10},{2765,-10},{2770,-10},{2775,-10},{2780,-10},{2785,-10},{2790,-10},{2795,-10},{2800,-10},
{2805,-10},{2810,-10},{2815,-10},{2820,-10},{2825,20},{2830,50},{2835,50},{2840,80},{2845,80},{2850,110},{2855,110},{2860,110},{2865,110},{2870,110},{2875,110},{2880,140},{2885,140},{2890,170},{2895,170},{2900,170},
{2905,200},{2910,200},{2915,230},{2920,230},{2925,230},{2930,230},{2935,260},{2940,290},{2945,290},{2950,290},{2955,290},{2960,260},{2965,260},{2970,230},{2975,230},{2980,230},{2985,260},{2990,290},{2995,290},{3000,290},
{3005,290},{3010,290},{3015,290},{3020,260},{3025,230},{3030,230},{3035,230},{3040,230},{3045,230},{3050,230},{3055,230},{3060,230},{3065,230},{3070,230},{3075,230},{3080,260},{3085,260},{3090,290},{3095,290},{3100,290},
{3105,290},{3110,290},{3115,290},{3120,290},{3125,320},{3130,350},{3135,350},{3140,350},{3145,320},{3150,320},{3155,290},{3160,290},{3165,260},{3170,230},{3175,230},{3180,230},{3185,200},{3190,170},{3195,170},{3200,170},
{3205,140},{3210,110},{3215,110},{3220,80},{3225,50},{3230,50},{3235,50},{3240,20},{3245,20},{3250,-10},{3255,-10},{3260,-10},{3265,-10},{3270,-10},{3275,-10},{3280,-10},{3285,-10},{3290,-10},{3295,-10},{3300,-10},
{3305,-10},{3310,-10},{3315,-10},{3320,-10},{3325,-10},{3330,-10},{3335,-10},{3340,-10},{3345,-10},{3350,-10},{3355,-10},{3360,-10},{3365,20},{3370,20},{3375,50},{3380,50},{3385,50},{3390,50},{3395,80},{3400,80},
{3405,110},{3410,110},{3415,110},{3420,140},{3425,170},{3430,170},{3435,170},{3440,170},{3445,140},{3450,140},{3455,110},{3460,110},{3465,110},{3470,110},{3475,110},{3480,110},{3485,110},{3490,110},{3495,110},{3500,110},
{3505,110},{3510,170},{3515,170},{3520,170},{3525,170},{3530,200},{3535,200},{3540,200},{3545,230},{3550,230},{3555,230},{3560,230},{3565,230},{3570,230},{3575,230},{3580,230},{3585,230},{3590,230},{3595,230},{3600,230},
{3605,230},{3610,230},{3615,230},{3620,230},{3625,230},{3630,230},{3635,230},{3640,230},{3645,230},{3650,200},{3655,170},{3660,170},{3665,170},{3670,170},{3675,170},{3680,170},{3685,170},{3690,170},{3695,170},{3700,170},
{3705,170},{3710,170},{3715,200},{3720,200},{3725,230},{3730,230},{3735,230},{3740,230},{3745,230},{3750,260},{3755,290},{3760,290},{3765,290},{3770,290},{3775,260},{3780,260},{3785,230},{3790,230},{3795,200},{3800,170},
{3805,170},{3810,140},{3815,140},{3820,110},{3825,80},{3830,80},{3835,50},{3840,50},{3845,50},{3850,50},{3855,50},{3860,50},{3865,50},{3870,50},{3875,80},{3880,80},{3885,110},{3890,110},{3895,110},{3900,110},
{3905,110},{3910,110},{3915,110},{3920,80},{3925,80},{3930,50},{3935,50},{3940,50},{3945,50},{3950,50},{3955,80},{3960,80},{3965,110},{3970,110},{3975,110},{3980,110},{3985,140},{3990,140},{3995,170},{4000,170},
{4005,170},{4010,170},{4015,170},{4020,170},{4025,170},{4030,170},{4035,170},{4040,170},{4045,170},{4050,170},{4055,170},{4060,170},{4065,170},{4070,170},{4075,170},{4080,170},{4085,170},{4090,170},{4095,170},{4100,170},
{4105,170},{4110,170},{4115,170},{4120,170},{4125,170},{4130,170},{4135,170},{4140,170},{4145,170},{4150,170},{4155,170},{4160,170},{4165,170},{4170,170},{4175,170},{4180,170},{4185,170},{4190,170},{4195,170},{4200,170},
{4205,170},{4210,170},{4215,170},{4220,170},{4225,170},{4230,170},{4235,170},{4240,170},{4245,170},{4250,170},{4255,170},{4260,170},{4265,170},{4270,170},{4275,170},{4280,170},{4285,170},{4290,170},{4295,170},{4300,170},
{4305,170},{4310,170},{4315,170},{4320,170},{4325,170},{4330,170},{4335,170},{4340,170},{4345,140},{4350,140},{4355,110},{4360,110},{4365,110},{4370,140},{4375,170},{4380,170},{4385,170},{4390,170},{4395,170},{4400,170},
{4405,170},{4410,140},{4415,140},{4420,110},{4425,110},{4430,110},{4435,110},{4440,110},{4445,110},{4450,110},{4455,110},{4460,110},{4465,110},{4470,110},{4475,110},{4480,110},{4485,110},{4490,110},{4495,110},{4500,110},
{4505,140},{4510,170},{4515,170},{4520,170},{4525,170},{4530,200},{4535,230},{4540,230},{4545,230},{4550,230},{4555,230},{4560,260},{4565,290},{4570,290},{4575,290},{4580,290},{4585,290},{4590,290},{4595,290},{4600,260},
{4605,260},{4610,260},{4615,230},{4620,230},{4625,230},{4630,230},{4635,230},{4640,230},{4645,230},{4650,260},{4655,260},{4660,290},{4665,290},{4670,290},{4675,290},{4680,290},{4685,290},{4690,320},{4695,320},{4700,350},
{4705,350},{4710,350},{4715,350},{4720,350},{4725,350},{4730,350},{4735,350},{4740,350},{4745,350},{4750,380},{4755,380},{4760,410},{4765,410},{4770,410},{4775,410},{4780,380},{4785,380},{4790,350},{4795,350},{4800,350},
{4805,350},{4810,350},{4815,350},{4820,350},{4825,350},{4830,350},{4835,350},{4840,350},{4845,350},{4850,350},{4855,350},{4860,350},{4865,350},{4870,380},{4875,380},{4880,410},{4885,410},{4890,440},{4895,440},{4900,470},
{4905,470},{4910,470},{4915,470},{4920,470},{4925,440},{4930,440},{4935,410},{4940,410},{4945,380},{4950,380},{4955,350},{4960,350},{4965,350},{4970,320},{4975,320},{4980,290},{4985,290},{4990,290},{4995,290},{5000,290},
{5005,290},{5010,290},{5015,260},{5020,260},{5025,230},{5030,230},{5035,230},{5040,230},{5045,260},{5050,260},{5055,290},{5060,290},{5065,290},{5070,290},{5075,290},{5080,290},{5085,290},{5090,290},{5095,290},{5100,290},
{5105,290},{5110,290},{5115,290},{5120,290},{5125,290},{5130,290},{5135,290},{5140,290},{5145,290},{5150,290},{5155,290},{5160,290},{5165,290},{5170,290},{5175,290},{5180,320},{5185,320},{5190,350},{5195,350},{5200,380},
{5205,380},{5210,410},{5215,410},{5220,410},{5225,410},{5230,410},{5235,440},{5240,470},{5245,470},{5250,470},{5255,470},{5260,470},{5265,470},{5270,470},{5275,470},{5280,470},{5285,470},{5290,470},{5295,470},{5300,470},
{5305,470},{5310,470},{5315,470},{5320,470},{5325,470},{5330,470},{5335,470},{5340,470},{5345,470},{5350,470},{5355,470},{5360,470},{5365,470},{5370,470},{5375,470},{5380,470},{5385,500},{5390,500},{5395,500},{5400,500},
{5405,500},{5410,500},{5415,500},{5420,500},{5425,500},{5430,500},{5435,500},{5440,500},{5445,500},{5450,500},{5455,500},{5460,500},{5465,500},{5470,500},{5475,500},{5480,500},{5485,500},{5490,500},{5495,500},{5500,500},
{5505,500},{5510,500},{5515,500},{5520,500},{5525,500},{5530,500},{5535,500},{5540,500},{5545,500},{5550,500},{5555,500},{5560,500},{5565,500},{5570,500},{5575,500},{5580,500},{5585,500},{5590,500},{5595,500},{5600,500},
{5605,500},{5610,500},{5615,500},{5620,500},{5625,500},{5630,500},{5635,500},{5640,500},{5645,500},{5650,500},{5655,500},{5660,500},{5665,500},{5670,500},{5675,500},{5680,500},{5685,500},{5690,500},{5695,500},{5700,500},
{5705,500},{5710,500},{5715,500},{5720,500},{5725,500},{5730,500},{5735,500},{5740,500},{5745,500},{5750,500},{5755,500},{5760,500},{5765,500},{5770,500},{5775,500},{5780,500},{5785,500},{5790,500},{5795,500},{5800,500},
{5805,500},{5810,500},{5815,500},{5820,500},{5825,500},{5830,500},{5835,500},{5840,500},{5845,500},{5850,500},{5855,500},{5860,500},{5865,500},{5870,500},{5875,500},{5880,470},{5885,440},{5890,440},{5895,440},{5900,440},
{5905,440},{5910,440},{5915,440},{5920,440},{5925,440},{5930,440},{5935,440},{5940,440},{5945,440},{5950,440},{5955,440},{5960,440},{5965,440},{5970,440},{5975,440},{5980,440},{5985,440},{5990,440},{5995,440},{6000,440},
{6005,440},{6010,440},{6015,440},{6020,440},{6025,440},{6030,440}};
      
     HStaticText winner=    new HStaticText("YOU WIN!", 310, 270, 100, 50);  
     HStaticText gameOver = new HStaticText("GAME OVER!", 270, 270, 150, 50);
     HStaticText restart = new HStaticText("move paddle to restart", 225, 320, 250, 50);
    
    
  Player player;
  Player player2;
  
  Ball ball;
  
  Score points;
  int max_score = 10;
  
    public HelloTVXlet() {
        
    }

    public void initXlet(XletContext context) {
     //720 x 576
     //x,y,width,heigth in px
        
     player = new Player (0,0, field_width, field_height);
     player2 = new Player (0,0, field_width, field_height);
   
     ball = new Ball (0,0, field_width, field_height);
     
     points = new Score(200,10,field_width, field_height);
     
     scene = HSceneFactory.getInstance().getDefaultHScene();
     scene.setBackgroundMode(HVisible.BACKGROUND_FILL);
     scene.setBackground(Color.BLACK);
     
    
     //scene.add(winner);
     //scene.add(gameOver);
     //scene.add(restart);
     scene.add(player);
     scene.add(ball);
     scene.add(player2);
     scene.add(points);
   
     scene.validate();
     scene.setVisible(true);
     
     UserEventRepository rep = new UserEventRepository("naam");
     rep.addAllArrowKeys();
     rep.addKey(HRcEvent.VK_ENTER);
     EventManager.getInstance().addUserEventListener(this, rep);
     
     player.pos_y = 200;
     player.pos_x=20;
     player2.pos_x= 690;
     player2.pos_y = 200;
    
     runGame();
     

    }

    public void startXlet() {
    Timer t=new Timer();
    MijnTimerTask mtt=new MijnTimerTask(this);
    t.scheduleAtFixedRate(mtt, 0, 2);
    }

    public void pauseXlet() {
     
    }

    public void destroyXlet(boolean unconditional) {
     
    }
    
     

    public void userEventReceived(UserEvent e) {
        if (e.getType()==HRcEvent.KEY_PRESSED)
        {
            System.out.println("key");
        if(e.getCode() == HRcEvent.VK_UP && player.pos_y>0){
            player.pos_y-=30;
            player.repaint();
        }
        if(e.getCode() == HRcEvent.VK_DOWN && player.pos_y<(field_height - paddle_height)){
            player.pos_y+=30;
            player.repaint();
        }
        
        if(e.getCode() == HRcEvent.VK_LEFT && player2.pos_y<(field_height - paddle_height)){
            player2.pos_y+=30;
            player2.repaint();
        }
        if(e.getCode() == HRcEvent.VK_RIGHT && player2.pos_y>0){
            player2.pos_y-=30;
            player2.repaint();  
        }
        if(e.getCode() == HRcEvent.VK_ENTER && !isRunning){
            isRunning = true;
            System.out.println("ENTER PUSHED");
         //   runGame();
        }
        if(!isRunning){
           if(e.getCode() == HRcEvent.VK_UP || e.getCode() == HRcEvent.VK_DOWN){
            isRunning = true;
            points.player1 = 0;
            points.player2 = 0;
            isWinner = false;
            
  //          scene.remove(winner);
     scene.repaint();       
            runGame();
        } 
        }
        }
    }
    
    public void runGame(){
        if(isRunning){
            //player.pos_y=ball.pos_y-40;
            time++;
            if (time%5==0)
            {
                player2.pos_y=computerplayer[idx_cp][1];
                idx_cp++;
                if (idx_cp>=computerplayer.length) idx_cp=0;
                //System.out.print("{"+time+","+player2.pos_y+"},");
            }
           
          //if (time%100==0) System.out.println("");
            
            
          ball.move();
          ball.repaint();
          checkCollision();
      
        }
    }
    
    public void checkCollision(){
        int staal=ball.radius/2;
        
        if(ball.pos_x <= player.pos_x+player.paddle_width){
           if(ball.pos_y >= player.pos_y-staal &&  ball.pos_y+ball.radius <= player.pos_y+player.paddle_height+staal) {
                ball.direction_x = true;
            }
        }
        if(ball.pos_x + ball.radius >= player2.pos_x){
           if(ball.pos_y >= player2.pos_y-staal &&  ball.pos_y <= player2.pos_y+player2.paddle_height-ball.radius+staal){
                ball.direction_x = false;
            }
        }
        
        if(ball.pos_x == 0){
            points.player2 ++;
            
        }
        
        if(ball.pos_x + ball.radius == field_width){
            points.player1 ++;
        }
        
        if(points.player1 >= max_score || points.player2 >= max_score ){
            isRunning = false;
            if(points.player1 >= max_score){
                isWinner = true;
            }
            else{
                isWinner = false;
            }
                if(!isRunning){
         if(isWinner){
           scene.add(winner); 
          
           System.out.println("player1 wins");
         }
         else{
             scene.add(gameOver);
             
             System.out.println("player2 wins");
         }
         scene.add(restart);
         //scene.validate();
         scene.repaint();
     }
        }    
    }
}
